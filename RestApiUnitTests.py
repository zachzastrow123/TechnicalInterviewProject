from flask import Flask
from flask_testing import TestCase
import unittest
import json

from RestApi import app

single_row = {
      "x0": -1.154193,
      "x1": 0.491916,
      "x2": 6.224051876,
      "x3": 0.911309553,
      "x4": -1.678553956,
      "x5": "thursday",
      "x6": 0.322901,
      "x7": 67.982758,
      "x8": 3.558598,
      "x9": 0.96855,
      "x10": 14.074355,
      "x11": 0.249903,
      "x12": "$2,829.55",
      "x13": 0.304158,
      "x14": 25.696303,
      "x15": -0.770478,
      "x16": 0.141477,
      "x17": 14.518516,
      "x18": -20.96581,
      "x19": 0.853685,
      "x20": 0.068268,
      "x21": 4.802548,
      "x22": 0.990827,
      "x23": 3.156357,
      "x24": -99.65054,
      "x25": 0.867591,
      "x26": 3.236979,
      "x27": 0.174629,
      "x28": 14.356692,
      "x29": -2.087516,
      "x30": 5.724849,
      "x31": "asia",
      "x32": 0.59833075,
      "x33": 2.91462962,
      "x34": -1.91981754,
      "x35": 1.40692145,
      "x36": 0.32311461,
      "x37": 3.51186338,
      "x38": -1.40365739,
      "x39": 0.40489983,
      "x40": -298.66,
      "x41": -1058.69,
      "x42": 671.97,
      "x43": 198.96,
      "x44": 0.59298387,
      "x45": 1.09119352,
      "x46": 0.704588028,
      "x47": 0.374969432,
      "x48": -0.03577548,
      "x49": 0.871422887,
      "x50": -0.043904734,
      "x51": 0.405559002,
      "x52": 0.203272455,
      "x53": 0.66308893,
      "x54": 0.89836666,
      "x55": 0.5989548,
      "x56": 0.366626093,
      "x57": -0.323338088,
      "x58": 0.564578324,
      "x59": -0.200633058,
      "x60": -1.013062546,
      "x61": 0.293787859,
      "x62": -0.094768608,
      "x63": "5.42%",
      "x64": 30.41426821,
      "x65": -3.70028535,
      "x66": 0.77438725,
      "x67": 14.48778214,
      "x68": -19.25390551,
      "x69": 0.12493584,
      "x70": 0.19245847,
      "x71": -1.13086714,
      "x72": 0.92305391,
      "x73": 3.77035543,
      "x74": -106.0486569,
      "x75": 0.86837454,
      "x76": 3.45900392,
      "x77": 0.31744764,
      "x78": 14.05635307,
      "x79": 0.86148679,
      "x80": 4.65582046,
      "x81": "October",
      "x82": "Female",
      "x83": -0.524380566,
      "x84": 0.720615301,
      "x85": 0.982927158,
      "x86": 0.092696234,
      "x87": -0.068323236,
      "x88": -0.646800508,
      "x89": -0.948285535,
      "x90": -0.489148648,
      "x91": -0.21326,
      "x92": 0.69115453,
      "x93": 3.51380309,
      "x94": -102.8073795,
      "x95": 0.85549063,
      "x96": 1.52366622,
      "x97": 0.62577725,
      "x98": -32.03853136,
      "x99": -111.4586163
   }

multiple_rows = [
   {
      "x0": -1.154193,
      "x1": 0.491916,
      "x2": 6.224051876,
      "x3": 0.911309553,
      "x5": "thursday",
      "x6": 0.322901,
      "x7": 67.982758,
      "x8": 3.558598,
      "x9": 0.96855,
      "x10": 14.074355,
      "x11": 0.249903,
      "x12": "$2,829.55",
      "x13": 0.304158,
      "x14": 25.696303,
      "x15": -0.770478,
      "x16": 0.141477,
      "x17": 14.518516,
      "x18": -20.96581,
      "x19": 0.853685,
      "x20": 0.068268,
      "x21": 4.802548,
      "x22": 0.990827,
      "x23": 3.156357,
      "x24": -99.65054,
      "x25": 0.867591,
      "x26": 3.236979,
      "x27": 0.174629,
      "x28": 14.356692,
      "x29": -2.087516,
      "x30": 5.724849,
      "x31": "asia",
      "x32": 0.59833075,
      "x33": 2.91462962,
      "x35": 1.40692145,
      "x36": 0.32311461,
      "x37": 3.51186338,
      "x38": -1.40365739,
      "x39": 0.40489983,
      "x40": -298.66,
      "x41": -1058.69,
      "x42": 671.97,
      "x43": 198.96,
      "x44": 0.59298387,
      "x45": 1.09119352,
      "x46": 0.704588028,
      "x47": 0.374969432,
      "x48": -0.03577548,
      "x49": 0.871422887,
      "x50": -0.043904734,
      "x51": 0.405559002,
      "x52": 0.203272455,
      "x53": 0.66308893,
      "x54": 0.89836666,
      "x55": 0.5989548,
      "x56": 0.366626093,
      "x57": -0.323338088,
      "x58": 0.564578324,
      "x59": -0.200633058,
      "x60": -1.013062546,
      "x61": 0.293787859,
      "x62": -0.094768608,
      "x63": "5.42%",
      "x64": 30.41426821,
      "x65": -3.70028535,
      "x66": 0.77438725,
      "x67": 14.48778214,
      "x68": -19.25390551,
      "x69": 0.12493584,
      "x70": 0.19245847,
      "x71": -1.13086714,
      "x72": 0.92305391,
      "x73": 3.77035543,
      "x74": -106.0486569,
      "x75": 0.86837454,
      "x76": 3.45900392,
      "x77": 0.31744764,
      "x78": 14.05635307,
      "x79": 0.86148679,
      "x80": 4.65582046,
      "x81": "October",
      "x82": "Female",
      "x83": -0.524380566,
      "x84": 0.720615301,
      "x85": 0.982927158,
      "x86": 0.092696234,
      "x87": -0.068323236,
      "x88": -0.646800508,
      "x89": -0.948285535,
      "x90": -0.489148648,
      "x91": -0.21326,
      "x92": 0.69115453,
      "x93": 3.51380309,
      "x94": -102.8073795,
      "x95": 0.85549063,
      "x96": 1.52366622,
      "x97": 0.62577725,
      "x98": -32.03853136,
      "x99": -111.4586163
   },
   {
      "x0": -0.675304,
      "x1": 0.137379,
      "x2": 4.393917364,
      "x3": -0.020123474,
      "x4": -0.475618592,
      "x5": "sunday",
      "x6": 0.157397,
      "x7": 55.677997,
      "x8": 1.83605,
      "x9": 0.91846,
      "x10": 14.351465,
      "x12": "$3,709.93",
      "x13": 0.819808,
      "x14": 17.07728,
      "x15": -0.243366,
      "x16": 0.061937,
      "x17": 14.332909,
      "x18": -19.662144,
      "x19": 0.165622,
      "x20": 0.146025,
      "x21": -2.414621,
      "x22": 0.353511,
      "x23": 3.190204,
      "x24": -118.124909,
      "x25": 0.90281,
      "x26": 0.79805,
      "x27": 0.52033,
      "x28": 14.054438,
      "x29": 0.871179,
      "x30": 5.126021,
      "x31": "asia",
      "x32": 0.51033987,
      "x33": 2.43467728,
      "x34": -2.04913613,
      "x35": 1.23089839,
      "x36": 0.83152122,
      "x37": 3.50526038,
      "x38": -1.89375171,
      "x39": -0.95390232,
      "x40": -276.43,
      "x41": 1526.17,
      "x42": -1062.4,
      "x43": 351.54,
      "x44": 0.09087572,
      "x45": 0.13512714,
      "x46": -0.027221829,
      "x47": -0.401745419,
      "x48": -0.768218476,
      "x49": -1.477928431,
      "x50": 0.461940432,
      "x51": 1.684288945,
      "x52": -0.628094413,
      "x53": 0.00528862,
      "x54": 0.38612031,
      "x55": -0.80454146,
      "x56": -0.215346985,
      "x57": -1.265547487,
      "x58": 0.682869749,
      "x59": 0.724155506,
      "x60": -0.113021177,
      "x61": -0.716963446,
      "x62": -0.552213898,
      "x63": "45.85%",
      "x64": 3.00265249,
      "x65": 4.05022364,
      "x66": 0.17271423,
      "x67": 14.03430494,
      "x68": -20.88886923,
      "x69": 0.57667473,
      "x70": 0.1727856,
      "x71": 2.37700832,
      "x72": 0.48401779,
      "x73": 3.01276075,
      "x74": -97.81706928,
      "x76": 1.80140824,
      "x77": 0.20838348,
      "x78": 14.4178935,
      "x79": -2.58655254,
      "x80": 2.52245981,
      "x81": "November",
      "x82": "Male",
      "x83": 0.557207747,
      "x84": 1.776308747,
      "x85": 0.471665232,
      "x86": 0.789085832,
      "x87": -1.061310858,
      "x88": -0.850872339,
      "x89": 0.599991103,
      "x90": -0.221790976,
      "x91": 0.406396,
      "x92": 0.9239034,
      "x93": 3.19037208,
      "x94": -99.4804139,
      "x95": 0.65872137,
      "x96": 1.01721083,
      "x97": 0.84194747,
      "x98": -32.13548212,
      "x99": -92.81795904
   }
]

bad_request = {
      "x0": -1.154193,
      "x1": 0.491916
      }

class ApiTests(unittest.TestCase):

    def setUp(self):
        app.config['TESTING'] = True
        self.app = app.test_client()

    def tearDown(self):
        pass


    def test_one_row(self):
        response = self.app.post('/predict',
                       data=json.dumps(single_row),
                       content_type='application/json')
        self.assertEqual(response.status_code, 201)

    def test_multiple_rows(self):
        response = self.app.post('/predict',
                       data=json.dumps(multiple_rows),
                       content_type='application/json')
        self.assertEqual(response.status_code, 201)

    def test_get_request(self):
        response = self.app.get('/predict')
        self.assertEqual(response.status_code, 405)

    def test_bad_request(self):
        response = self.app.post('/predict',
                       data=json.dumps(bad_request),
                       content_type='application/json')
        self.assertEqual(response.status_code, 400)


if __name__ == "__main__":
    unittest.main()
